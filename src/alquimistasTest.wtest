import alquimistasMaxi.*
describe "Alquimistas test"{
	
	
//  1
	
	test "alquimista tiene criterio" {
		bomba.definirDanio(110)
		debilitador.definirPotencia(0)
		
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(debilitador)
		
		assert.that(alquimista.tieneCriterio())
	}
	
	test "alquimista no tiene criterio por falta de materiales efectivos" {
		bomba.definirDanio(110)
		debilitador.definirPotencia(0)
		
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(debilitador)
		alquimista.agregarItemDeCombate(debilitador)
		
		assert.notThat(alquimista.tieneCriterio())
	}
	
//  2
	test "alquimista es buen explorador" {
		alquimista.agregarItemDeRecoleccion(itemDeRecoleccion)
		alquimista.agregarItemDeRecoleccion(itemDeRecoleccion)
		alquimista.agregarItemDeRecoleccion(itemDeRecoleccion)
		
		assert.that(alquimista.esBuenExplorador())
	}
	
	test "alquimista no es buen explorador por falta de items de recoleccion" {
		alquimista.agregarItemDeRecoleccion(itemDeRecoleccion)
		alquimista.agregarItemDeRecoleccion(itemDeRecoleccion)
		
		assert.notThat(alquimista.esBuenExplorador())
	}
	
//  3

	test "Capacidad ofensiva de alquimista con bombas" {
		bomba.definirDanio(100)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(bomba)
		alquimista.agregarItemDeCombate(bomba)
		
		assert.equals(150, alquimista.capacidadOfensiva())
	}
	
	test "Capacidad ofensiva de alquimista con pociones" {
		pocion.definirPoderCurativo(90)
		pocion.agregarMaterial(materialMistico)
		
		alquimista.agregarItemDeCombate(pocion)
		alquimista.agregarItemDeCombate(pocion)
		
		assert.equals(200, alquimista.capacidadOfensiva())
	}
	
	test "Capacidad ofensiva de alquimista con debilitadores" {
		debilitador.agregarMaterial(materialMistico)
		debilitador.agregarMaterial(materialMistico)
		
		alquimista.agregarItemDeCombate(debilitador)
		alquimista.agregarItemDeCombate(debilitador)
		
		assert.equals(48, alquimista.capacidadOfensiva())
	}
}